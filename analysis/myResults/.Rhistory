text(mds1[,1], mds1[,2], labels(d), cex=.5)
d <- dist(PMI[sample(1:169, 169),], method = "euclidean") # distance matrix - "euclidean", "maximum", "manhattan", "canberra", "binary" or "minkowski"
mds1 = cmdscale(d, k=2)
plot(mds1[,1], mds1[,2], type = "n", xlab = "", ylab = "", axes = FALSE,
main = "cmdscale with log static euclidean distance of log_average")
text(mds1[,1], mds1[,2], labels(d), cex=.5)
d <- dist(log_average[sample(1:169, 169),], method = "euclidean") # distance matrix - "euclidean", "maximum", "manhattan", "canberra", "binary" or "minkowski"
mds1 = cmdscale(d, k=2)
plot(mds1[,1], mds1[,2], type = "n", xlab = "", ylab = "", axes = FALSE,
main = "cmdscale with log static euclidean distance of log_average")
text(mds1[,1], mds1[,2], labels(d), cex=.5)
number_of_factors = 5
fit_fact_average <- factanal(log_average[,c(1:135, 137:169)], number_of_factors, rotation="varimax")
print(fit_fact_average, digits=2, cutoff=.12, sort=TRUE)
load_average <- fit_fact_average$loadings[,c(1:number_of_factors)]
d <- dist(load_average, method = "euclidean") # distance matrix - "euclidean", "maximum", "manhattan", "canberra", "binary" or "minkowski"
mds1 = cmdscale(d, k=2)
plot(mds1[,1], mds1[,2], type = "n", xlab = "", ylab = "", axes = FALSE,
main = "cmdscale with log static euclidean distance of log_average")
text(mds1[,1], mds1[,2], labels(d), cex=.5)
fit_fact_difference <- factanal(log_difference[,c(1:135, 137:169)], 5, rotation="varimax")
print(fit_fact_difference, digits=2, cutoff=.12, sort=TRUE)
load_difference <- fit_fact_difference$loadings[,c(1, 2)]
plot(load_difference,type="n")
text(load_difference,labels=names(log_difference[,1:165]),cex=.6)
names(log_difference[,c(1:135, 137:169)])
plot(load_difference,type="n")
text(load_difference,labels=names(log_difference[,c(1:135, 137:169)]),cex=.6)
fit_fact_average <- factanal(log_average[,c(1:135, 137:169)], 5, rotation="varimax")
print(fit_fact_average, digits=2, cutoff=.12, sort=TRUE)
load_average <- fit_fact_average$loadings[,c(1, 4)]
plot(load_average,type="n", main = "factor 1 and 3, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(1, 3)]
plot(load_average,type="n", main = "factor 1 and 3, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(2, 4)]
plot(load_average,type="n", main = "factor 1 and 3, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(2, 5)]
plot(load_average,type="n", main = "factor 1 and 3, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(1, 5)]
plot(load_average,type="n", main = "factor 1 and 3, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(2, 5)]
plot(load_average,type="n", main = "factor 1 and 3, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(1, 2)]
plot(load_average,type="n", main = "factor 1 and 3, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(3, 2)]
plot(load_average,type="n", main = "factor 1 and 3, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(4, 5)]
plot(load_average,type="n", main = "factor 1 and 3, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(1, 5)]
plot(load_average,type="n", main = "factor 1 and 3, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
fit_fact_average <- factanal(log_average[,c(1:135, 137:169)], 4, rotation="varimax")
print(fit_fact_average, digits=2, cutoff=.12, sort=TRUE)
load_average <- fit_fact_average$loadings[,c(1, 2)]
plot(load_average,type="n", main = "factor 1 and 3, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(3, 4)]
plot(load_average,type="n", main = "factor 1 and 3, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
fit_fact_average <- factanal(log_average[,c(1:135, 137:169)], 5, rotation="varimax")
print(fit_fact_average, digits=2, cutoff=.12, sort=TRUE)
load_average <- fit_fact_average$loadings[,c(1, 2)]
plot(load_average,type="n", main = "factor 1 and 3, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(2, 3)]
plot(load_average,type="n", main = "factor 1 and 3, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(1, 2)]
plot(load_average,type="n", main = "factor 1 and 3, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(4, 2)]
plot(load_average,type="n", main = "factor 1 and 3, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(4, 5)]
plot(load_average,type="n", main = "factor 1 and 3, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(2, 5)]
plot(load_average,type="n", main = "factor 1 and 3, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(2, 4)]
plot(load_average,type="n", main = "factor 1 and 3, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(1, 2)]
plot(load_average,type="n", main = "factor 1 and 2, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(3, 4)]
plot(load_average,type="n", main = "factor 1 and 2, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(1, 3)]
plot(load_average,type="n", main = "factor 1 and 2, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
print(fit_fact_average, digits=2, cutoff=.12, sort=TRUE)
load_average <- fit_fact_average$loadings[,c(1, 5)]
plot(load_average,type="n", main = "factor 1 and 2, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
number_of_factors = 5
fit_fact_average <- factanal(log_average[,c(1:135, 137:169)], number_of_factors, rotation="varimax")
print(fit_fact_average, digits=2, cutoff=.12, sort=TRUE)
load_average <- fit_fact_average$loadings[,c(1:number_of_factors)]
d <- dist(load_average, method = "euclidean") # distance matrix - "euclidean", "maximum", "manhattan", "canberra", "binary" or "minkowski"
mds1 = cmdscale(d, k=2)
plot(mds1[,1], mds1[,2], type = "n", xlab = "", ylab = "", axes = FALSE,
main = "cmdscale with log static euclidean distance of log_average")
text(mds1[,1], mds1[,2], labels(d), cex=.5)
bluefunc <- colorRampPalette(c("blue", "red"))
factor_for_color = 2
color_criteria = expected_factor_changes
colors_named = bluefunc(168)[findInterval(
(color_criteria[c(1:135, 137:169),factor_for_color] -
min(color_criteria[c(1:135, 137:169),factor_for_color])) /
max(color_criteria[c(1:135, 137:169),factor_for_color] -
min(color_criteria[c(1:135, 137:169),factor_for_color])), seq(0:168) / 168)]
plot(fit_fact_average$loadings[,1], fit_fact_average$loadings[,2], type = "n", xlab = "", ylab = "", axes = FALSE,
col = colors_named,
main = "Factors 1, 2 visualized, color coded change in factor 1")
text(fit_fact_average$loadings[,1], fit_fact_average$loadings[,2],
col = colors_named,
labels = names(fit_fact_average$loadings[,1]), cex=1.1)
plot(fit_fact_average$loadings[,3], fit_fact_average$loadings[,4], type = "n", xlab = "", ylab = "", axes = FALSE,
col = colors_named,
main = "Factors 1, 2 visualized, color coded change in factor 1")
text(fit_fact_average$loadings[,3], fit_fact_average$loadings[,4],
col = colors_named,
labels = names(fit_fact_average$loadings[,1]), cex=1.1)
expected_factor_changes
fit_fact_average <- factanal(log_average[,c(1:135, 137:169)], 5, rotation="varimax")
print(fit_fact_average, digits=2, cutoff=.12, sort=TRUE)
fit_fact_average <- factanal(log_average[,c(1:135, 137:169)], 2, rotation="varimax")
print(fit_fact_average, digits=2, cutoff=.12, sort=TRUE)
load_average <- fit_fact_average$loadings[,c(1, 5)]
load_average <- fit_fact_average$loadings[,c(1, 2)]
plot(load_average,type="n", main = "factor 1 and 2, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
fit_fact_average <- factanal(log_average[,c(1:135, 137:169)], 3, rotation="varimax")
print(fit_fact_average, digits=2, cutoff=.12, sort=TRUE)
load_average <- fit_fact_average$loadings[,c(1, 2)]
plot(load_average,type="n", main = "factor 1 and 2, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(1, 3)]
plot(load_average,type="n", main = "factor 1 and 2, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(2, 3)]
plot(load_average,type="n", main = "factor 1 and 2, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
fit_fact_average <- factanal(log_average[,c(1:135, 137:169)], 4, rotation="varimax")
print(fit_fact_average, digits=2, cutoff=.12, sort=TRUE)
load_average <- fit_fact_average$loadings[,c(2, 3)]
plot(load_average,type="n", main = "factor 1 and 2, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
fit_fact_average <- factanal(log_average[,c(1:135, 137:169)], 5, rotation="varimax")
print(fit_fact_average, digits=2, cutoff=.12, sort=TRUE)
load_average <- fit_fact_average$loadings[,c(2, 3)]
plot(load_average,type="n", main = "factor 1 and 2, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(1, 3)]
plot(load_average,type="n", main = "factor 1 and 2, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(1, 4)]
plot(load_average,type="n", main = "factor 1 and 2, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(1, 5)]
plot(load_average,type="n", main = "factor 1 and 2, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
fit_fact_average <- factanal(log_average[,c(1:135, 137:169)], 6, rotation="varimax")
print(fit_fact_average, digits=2, cutoff=.12, sort=TRUE)
load_average <- fit_fact_average$loadings[,c(1, 6)]
plot(load_average,type="n", main = "factor 1 and 2, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(1, 2)]
plot(load_average,type="n", main = "factor 1 and 2, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(1, 3)]
plot(load_average,type="n", main = "factor 1 and 2, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(1, 4)]
plot(load_average,type="n", main = "factor 1 and 2, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(1, 5)]
plot(load_average,type="n", main = "factor 1 and 2, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
emotions_updates_by_update_range = read.csv("//Users/andesgomez/Documents/Stanford/Thesis/data/emotion_updates_by_update_range_file.csv",header=TRUE, sep=",")
base_freqs = colSums(emotions_updates_by_update_range)
base_freqs = as.data.frame(base_freqs)
original_name_vector = rownames(base_freqs)
remove_vector = (rownames(base_freqs) == 'working') | (rownames(base_freqs) == 'awake') | (rownames(base_freqs) == 'other') |
(rownames(base_freqs) == 'confident') | (rownames(base_freqs) == 'contemplative') |
(rownames(base_freqs) == 'complacent') | (rownames(base_freqs) == 'feisty')
base_freqs <- base_freqs[-(1:177)[remove_vector],]
new_name_vector <- original_name_vector[-(1:177)[remove_vector]]
base_freqs = as.data.frame(base_freqs)
rownames(base_freqs) = new_name_vector
base_rates = base_freqs / sum(base_freqs)
future_emotion = read.csv("//Users/andesgomez/Documents/Stanford/Thesis/data/future_emotion_relationships.csv",header=TRUE, sep=",")
future_emotion$mood <- NULL
future_emotion$working <- NULL
future_emotion$awake <- NULL
future_emotion$other <- NULL
future_emotion$confident <- NULL
future_emotion$contemplative <- NULL
future_emotion$complacent <- NULL
future_emotion$feisty <- NULL
future_emotion <- future_emotion[-(1:177)[rownames(future_emotion) == 'mood'],]
future_emotion <- future_emotion[-(1:176)[rownames(future_emotion) == 'working'],]
future_emotion <- future_emotion[-(1:175)[rownames(future_emotion) == 'awake'],]
future_emotion <- future_emotion[-(1:174)[rownames(future_emotion) == 'other'],]
future_emotion <- future_emotion[-(1:173)[rownames(future_emotion) == 'confident'],]
future_emotion <- future_emotion[-(1:172)[rownames(future_emotion) == 'contemplative'],]
future_emotion <- future_emotion[-(1:171)[rownames(future_emotion) == 'complacent'],]
future_emotion <- future_emotion[-(1:170)[rownames(future_emotion) == 'feisty'],]
log_future = log(future_emotion + 0.000001)
hist(log_future$sad)
past_emotion = read.csv("//Users/andesgomez/Documents/Stanford/Thesis/data/past_emotion_relationships.csv",header=TRUE, sep=",")
past_emotion$mood <- NULL
past_emotion$working <- NULL
past_emotion$awake <- NULL
past_emotion$other <- NULL
past_emotion$confident <- NULL
past_emotion$contemplative <- NULL
past_emotion$complacent <- NULL
past_emotion$feisty <- NULL
past_emotion <- past_emotion[-(1:177)[rownames(past_emotion) == 'mood'],]
past_emotion <- past_emotion[-(1:176)[rownames(past_emotion) == 'working'],]
past_emotion <- past_emotion[-(1:175)[rownames(past_emotion) == 'awake'],]
past_emotion <- past_emotion[-(1:174)[rownames(past_emotion) == 'other'],]
past_emotion <- past_emotion[-(1:173)[rownames(past_emotion) == 'confident'],]
past_emotion <- past_emotion[-(1:172)[rownames(past_emotion) == 'contemplative'],]
past_emotion <- past_emotion[-(1:171)[rownames(past_emotion) == 'complacent'],]
past_emotion <- past_emotion[-(1:170)[rownames(past_emotion) == 'feisty'],]
raw_average <- (future_emotion + past_emotion + 0.0000001) / 2
log_average <- log(raw_average)
log_average$happy
head(log_average)
fit_fact_average <- factanal(log_average[,c(1:135, 137:169)], 5, rotation="varimax")
print(fit_fact_average, digits=2, cutoff=.12, sort=TRUE)
load_average <- fit_fact_average$loadings[,c(1, 2)]
plot(load_average,type="n", main = "factor 1 and 2, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
load_average <- fit_fact_average$loadings[,c(3, 4)]
plot(load_average,type="n", main = "factor 1 and 2, static space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.6)
patch <- read.csv("/Users/andesgomez/Documents/Stanford/Autumn2013-Masters/PayedWork/andres_data/Spring2014/patch_oddone_no_fam_14_may_PATCH.csv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
patch$odd_one <- patch$Answer.choice=="\"odd_one\""
patch$twin_1 <- patch$Answer.choice=="\"twin_1\""
patch$twin_2 <- patch$Answer.choice=="\"twin_2\""
compliant <- patch$Answer.manip_check_target == "\"2\"" & patch$Answer.manip_check_dist == "\"2\"" & patch$Answer.manip_check_foil == "\"2\"" & patch$Answer.name_check_correct == "\"TRUE\""
patch_compliant <- subset(patch,compliant)
#patch_compliant <- patch
#patch_not_compliant <- subset(patch,!compliant)
patch_subset = subset(patch_compliant, patch_compliant$Answer.linguistic_framing_condition == 9)
word_subset = subset(patch_compliant, patch_compliant$Answer.linguistic_framing_condition == 10)
patch_table <- aggregate(cbind(odd_one,
twin_1,
twin_2) ~
Answer.linguistic_framing_condition , data=patch_compliant, sum)
patch_table <- aggregate(cbind(odd_one,
twin_1,
twin_2) ~
Answer.linguistic_framing_condition + Answer.item, data=patch_compliant, sum)
patch_table
library(ggplot2)
md <- melt(patch_table, id.vars=c("Answer.item","Answer.linguistic_framing_condition"))
library(reshape2)
md <- melt(patch_table, id.vars=c("Answer.item","Answer.linguistic_framing_condition"))
med
md
head(patch_compliant)
ms <- ddply(patch_compliant, .(Answer.linguistic_framing_condition,Answer.item),
function(x) {
y <- data.frame(frame=x$Answer.linguistic_framing_condition,
item=x$Answer.item,
choice=c("odd_one","twin_1","twin_2"),
proportion=c(mean(x$odd_one),mean(x$twin_1),mean(x$twin_2)))
return(y)
})
library(plyr)
ms <- ddply(patch_compliant, .(Answer.linguistic_framing_condition,Answer.item),
function(x) {
y <- data.frame(frame=x$Answer.linguistic_framing_condition,
item=x$Answer.item,
choice=c("odd_one","twin_1","twin_2"),
proportion=c(mean(x$odd_one),mean(x$twin_1),mean(x$twin_2)))
return(y)
})
ms <- ddply(patch_compliant, .(Answer.linguistic_framing_condition,Answer.item),
function(x) {
y <- data.frame(frame=x$Answer.linguistic_framing_condition[1],
item=x$Answer.item[1],
choice=c("odd_one","twin_1","twin_2"),
proportion=c(mean(x$odd_one),mean(x$twin_1),mean(x$twin_2)))
return(y)
})
ns
ms
ms <- ddply(patch_compliant, .(Answer.linguistic_framing_condition,Answer.item),
function(x) {
y <- data.frame(choice=c("odd_one","twin_1","twin_2"),
proportion=c(mean(x$odd_one),mean(x$twin_1),mean(x$twin_2)))
return(y)
})
ms
ms$frame <- factor(Answer.linguistic_framing_condition)
ms$frame <- factor(ms$Answer.linguistic_framing_condition)
levels(ms$frame) <- c("patch","word")
ms$item <- factor(ms$Answer.item)
ms
qplot(item, proportion, fill=choice, facets = . ~ frame, data=ms)
qplot(item, proportion, fill=choice, facets = . ~ frame,
geom="bar",
data=ms)
emotions_updates_by_update_range = read.csv("//Users/andesgomez/Documents/Stanford/Thesis/data/emotion_updates_by_update_range_file.csv",header=TRUE, sep=",")
base_freqs = colSums(emotions_updates_by_update_range)
base_freqs = as.data.frame(base_freqs)
original_name_vector = rownames(base_freqs)
remove_vector = (rownames(base_freqs) == 'working') | (rownames(base_freqs) == 'awake') | (rownames(base_freqs) == 'other') |
(rownames(base_freqs) == 'confident') | (rownames(base_freqs) == 'contemplative') |
(rownames(base_freqs) == 'complacent') | (rownames(base_freqs) == 'feisty')
base_freqs <- base_freqs[-(1:177)[remove_vector],]
new_name_vector <- original_name_vector[-(1:177)[remove_vector]]
base_freqs = as.data.frame(base_freqs)
rownames(base_freqs) = new_name_vector
base_rates = base_freqs / sum(base_freqs)
future_emotion = read.csv("//Users/andesgomez/Documents/Stanford/Thesis/data/future_emotion_relationships.csv",header=TRUE, sep=",")
future_emotion$mood <- NULL
future_emotion$working <- NULL
future_emotion$awake <- NULL
future_emotion$other <- NULL
future_emotion$confident <- NULL
future_emotion$contemplative <- NULL
future_emotion$complacent <- NULL
future_emotion$feisty <- NULL
future_emotion <- future_emotion[-(1:177)[rownames(future_emotion) == 'mood'],]
future_emotion <- future_emotion[-(1:176)[rownames(future_emotion) == 'working'],]
future_emotion <- future_emotion[-(1:175)[rownames(future_emotion) == 'awake'],]
future_emotion <- future_emotion[-(1:174)[rownames(future_emotion) == 'other'],]
future_emotion <- future_emotion[-(1:173)[rownames(future_emotion) == 'confident'],]
future_emotion <- future_emotion[-(1:172)[rownames(future_emotion) == 'contemplative'],]
future_emotion <- future_emotion[-(1:171)[rownames(future_emotion) == 'complacent'],]
future_emotion <- future_emotion[-(1:170)[rownames(future_emotion) == 'feisty'],]
log_future = log(future_emotion + 0.000001)
past_emotion = read.csv("//Users/andesgomez/Documents/Stanford/Thesis/data/past_emotion_relationships.csv",header=TRUE, sep=",")
past_emotion$mood <- NULL
past_emotion$working <- NULL
past_emotion$awake <- NULL
past_emotion$other <- NULL
past_emotion$confident <- NULL
past_emotion$contemplative <- NULL
past_emotion$complacent <- NULL
past_emotion$feisty <- NULL
past_emotion <- past_emotion[-(1:177)[rownames(past_emotion) == 'mood'],]
past_emotion <- past_emotion[-(1:176)[rownames(past_emotion) == 'working'],]
past_emotion <- past_emotion[-(1:175)[rownames(past_emotion) == 'awake'],]
past_emotion <- past_emotion[-(1:174)[rownames(past_emotion) == 'other'],]
past_emotion <- past_emotion[-(1:173)[rownames(past_emotion) == 'confident'],]
past_emotion <- past_emotion[-(1:172)[rownames(past_emotion) == 'contemplative'],]
past_emotion <- past_emotion[-(1:171)[rownames(past_emotion) == 'complacent'],]
past_emotion <- past_emotion[-(1:170)[rownames(past_emotion) == 'feisty'],]
log_past = log(past_emotion + 0.000001)
raw_average <- (future_emotion + past_emotion + 0.0000001) / 2
log_average <- log(raw_average)
fit_fact_average <- factanal(log_average[,c(1:135, 137:169)], 7, rotation="varimax")
print(fit_fact_average, digits=2, cutoff=.12, sort=TRUE)
load_average <- fit_fact_average$loadings[,c(3, 6)]
plot(load_average,type="n", main = "Factors 1 and 2, conditional probability space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.5)
load_average <- fit_fact_average$loadings[,c(2, 6)]
plot(load_average,type="n", main = "Factors 1 and 2, conditional probability space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.5)
load_average <- fit_fact_average$loadings[,c(1, 6)]
plot(load_average,type="n", main = "Factors 1 and 2, conditional probability space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.5)
load_average <- fit_fact_average$loadings[,c(2, 6)]
plot(load_average,type="n", main = "Factors 2 and 6 out of 7, conditional probability space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.5)
plot(load_average,type="n", main = "Factors 2 and 6 out of 7, conditional probability space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.3)
load_average <- fit_fact_average$loadings[,c(2, 6)]
plot(load_average,type="n", main = "Factors 2 and 6 out of 7, conditional probability space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.25)
load_average <- fit_fact_average$loadings[,c(6, 2)]
plot(load_average,type="n", main = "Factors 2 and 6 out of 7, conditional probability space")
text(load_average,labels=names(log_average[,c(1:135, 137:169)]),cex=.25)
emotions_updates_by_update_range = read.csv("//Users/andesgomez/Documents/Stanford/Thesis/data/emotion_updates_by_update_range_file.csv",header=TRUE, sep=",")
base_freqs = colSums(emotions_updates_by_update_range)
base_freqs = as.data.frame(base_freqs)
original_name_vector = rownames(base_freqs)
remove_vector = (rownames(base_freqs) == 'working') | (rownames(base_freqs) == 'awake') | (rownames(base_freqs) == 'other') |
(rownames(base_freqs) == 'confident') | (rownames(base_freqs) == 'contemplative') |
(rownames(base_freqs) == 'complacent') | (rownames(base_freqs) == 'feisty')
base_freqs <- base_freqs[-(1:177)[remove_vector],]
new_name_vector <- original_name_vector[-(1:177)[remove_vector]]
base_freqs = as.data.frame(base_freqs)
rownames(base_freqs) = new_name_vector
base_rates = base_freqs / sum(base_freqs)
future_emotion = read.csv("//Users/andesgomez/Documents/Stanford/Thesis/data/future_emotion_relationships.csv",header=TRUE, sep=",")
future_emotion$mood <- NULL
future_emotion$working <- NULL
future_emotion$awake <- NULL
future_emotion$other <- NULL
future_emotion$confident <- NULL
future_emotion$contemplative <- NULL
future_emotion$complacent <- NULL
future_emotion$feisty <- NULL
future_emotion <- future_emotion[-(1:177)[rownames(future_emotion) == 'mood'],]
future_emotion <- future_emotion[-(1:176)[rownames(future_emotion) == 'working'],]
future_emotion <- future_emotion[-(1:175)[rownames(future_emotion) == 'awake'],]
future_emotion <- future_emotion[-(1:174)[rownames(future_emotion) == 'other'],]
future_emotion <- future_emotion[-(1:173)[rownames(future_emotion) == 'confident'],]
future_emotion <- future_emotion[-(1:172)[rownames(future_emotion) == 'contemplative'],]
future_emotion <- future_emotion[-(1:171)[rownames(future_emotion) == 'complacent'],]
future_emotion <- future_emotion[-(1:170)[rownames(future_emotion) == 'feisty'],]
log_future = log(future_emotion + 0.000001)
?binom.bayes
library(binom.bayes)
install.packages("binom.bayes")
library(binom.bayes)
install.packages("binom")
library(binom)
?binom.bayes
1700*0.61
best = 1700*0.61
combined$higher = binom.bayes(best, 1700, conf.level = 0.95, tol = 0.05)
best = 1700*0.61
combined$higher = binom.bayes(best, 1700, conf.level = 0.95, tol = 0.05)
best_ci = binom.bayes(best, 1700, conf.level = 0.95, tol = 0.05)
best_ci
best = 5*1700*0.61
best_ci = binom.bayes(best, 5*1700, conf.level = 0.95, tol = 0.05)
best_ci
best = 5*1700*0.586
best_ci = binom.bayes(best, 5*1700, conf.level = 0.95, tol = 0.05)
binom.bayes(best, 5*1700, conf.level = 0.95, tol = 0.05)
best = 5*1700*0.594
binom.bayes(best, 5*1700, conf.level = 0.95, tol = 0.05)
best = 5*17000*0.594
binom.bayes(best, 5*17000, conf.level = 0.95, tol = 0.05)
best = 5*1700*0.594
binom.bayes(best, 5*1700, conf.level = 0.95, tol = 0.5)
binom.bayes(best, 5*1700, conf.level = 0.95, tol = 0.0005)
binom.bayes(best, 5*1700, conf.level = 0.95, tol = 0.01)
binom.bayes(best, 5*1700, conf.level = 0.95, tol = 0.0145)
binom.bayes(best, 5*1700, conf.level = 0.95, tol = 0.145)
binom.bayes(best, 5*1700, conf.level = 0.95, tol = 0.005)
binom.bayes(best, 5*1700, conf.level = 0.95, tol = 0.05)
rep(1,10)
best
best = 5*1700*(1-0.594)
best
best = 5*1700*(0.586)
prca = 5*1700*0.586
prca
best = 5*1700*(1-0.594)
prca
prca = 5*1700*(1- 0.586)
prca
best_s = c(rep(1,5049),rep(0,  3451))
prca_s = c(rep(1, 4981), rep(0, 3519))
t.test(best_s, prca_s)
best = 5*1700*(1-0.61)
5*1700*(1-0.61)
5*1700*(0.61)
best_s = c(rep(1,5185),rep(0,  3315))
prca_s = c(rep(1, 4981), rep(0, 3519))
t.test(best_s, prca_s)
5*1700*(0.604)
5*1700*(1 - 0.604)
best_s = c(rep(1,5134),rep(0,  3366))
prca_s = c(rep(1, 4981), rep(0, 3519))
t.test(best_s, prca_s)
patch <- read.csv("/Users/andesgomez/Documents/Stanford/Autumn2013-Masters/PayedWork/andres_data/Spring2014/patch_oddone_no_fam_14_may_PATCH.csv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
patch$odd_one <- patch$Answer.choice=="\"odd_one\""
patch$twin_1 <- patch$Answer.choice=="\"twin_1\""
patch$twin_2 <- patch$Answer.choice=="\"twin_2\""
compliant <- patch$Answer.manip_check_target == "\"2\"" & patch$Answer.manip_check_dist == "\"2\"" & patch$Answer.manip_check_foil == "\"2\"" & patch$Answer.name_check_correct == "\"TRUE\""
patch_compliant <- subset(patch,compliant)
patch_subset = subset(patch_compliant, patch_compliant$Answer.linguistic_framing_condition == 9)
word_subset = subset(patch_compliant, patch_compliant$Answer.linguistic_framing_condition == 10)
patch_table <- aggregate(cbind(odd_one,
twin_1,
twin_2) ~
Answer.linguistic_framing_condition , data=patch_compliant, sum)
patch_table
patch_table <- aggregate(cbind(odd_one,
twin_1,
twin_2) ~
Answer.linguistic_framing_condition + Answer.item, data=patch_compliant, sum)
patch_table
patch_by_item <- aggregate(cbind(odd_one,
twin_1,
twin_2) ~
Answer.item, data=patch_subset, sum)
patch_by_item
word_by_item <- aggregate(cbind(odd_one,
twin_1,
twin_2) ~
Answer.item, data=word_subset, sum)
word_by_item
write.csv(word_by_item, file = "one_word_odd_one.csv")
write.csv(patch_by_item, file = "one_patch_odd_one.csv")
setwd("~/Documents/Stanford/Autumn2013-Masters/PayedWork/andres_analysis/myResults")
write.csv(word_by_item, file = "one_word_odd_one.csv")
write.csv(patch_by_item, file = "one_patch_odd_one.csv")
